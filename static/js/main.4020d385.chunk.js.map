{"version":3,"sources":["Components/TopPicture.js","Components/MenuBar/MenuBar.js","Components/AboutMe/AMPhoto.js","Components/AboutMe/AMText.js","Components/AboutMe/AMBackground.js","Components/Research/ResBrainPhoto.js","Components/Research/ResText.js","Components/Research/ResBrain.js","Components/Research/ResPhoto.js","Components/Research/ResBehaviour.js","Components/Research/ResColumns.js","Components/Research/ResBackground.js","Components/Publications/PubCard.js","Components/Publications/PubBackground.js","Components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["TopImage","Name","TopPicture","id","src","alt","LinkContainer","Background","Text","Buttons","Email","MyIcon","MenuBar","href","target","rel","onClick","animateScroll","scrollToTop","to","smooth","duration","style","textDecoration","color","Photo","Container","AMPhoto","Text2","AMText","AMBackground","ResBrainPhoto","imageSource","source","ResText","text","ResBrain","ResPhoto","ResBehaviour","ResColumns","ResBackground","PaperContainer","PaperTitle","PaperText","PaperAbstract","AbstractContainer","ExpandArrow","LinkButton","GitButton","OSF","YearDiv","MainContainer","PubCard","data","useState","isOpen","setOpen","collapseFunction","selectedColor","year","getColor","newStyle","borderColor","link","hasOSF","className","github","authors","journal","title","isOpened","abstract","PubBackground","items","map","i","key","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4020d385.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled/macro\";\n\nconst TopImage = styled.img`\n  width: 100vw;\n  height: 50vh;\n  object-fit: cover;\n  position: relative;\n  border-bottom: 2px solid black;\n`;\n\nconst Name = styled.div`\n  font-size: 4rem;\n  font-family: \"Montserrat\", sans-serif;\n  position: absolute;\n  top: 5vh;\n  padding-top: 10vh;\n  height: 20vh;\n  width: 100vw;\n`;\n\nconst TopPicture = () => {\n  var imageSource = `./img/toppic.jpg`;\n\n  return (\n    <div id=\"home\">\n      <TopImage src={imageSource} alt=\"\"></TopImage>\n      <Name>Rose Cooper, PhD</Name>\n    </div>\n  );\n};\n\nexport default TopPicture;\n","import React from \"react\";\nimport styled from \"@emotion/styled/macro\";\nimport { Link, animateScroll } from \"react-scroll\";\n\nconst LinkContainer = styled.div`\n  display: flex;\n  flex: 1 1 0px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Background = styled.div`\n  width: 100vw;\n  height: 10vh;\n  margin-top: -10vh;\n  background: rgba(255, 255, 255, 0.7);\n  position: sticky;\n  top: 0px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  z-index: 50;\n  text-align: center;\n`;\n\nconst Text = styled.div`\n  font-size: 1.5rem;\n  font-family: \"Montserrat\", sans-serif;\n  color: black;\n  padding-right: 40px;\n  cursor: pointer;\n\n  &:hover {\n    color: grey;\n  }\n`;\n\nconst Buttons = styled.div`\n  font-size: 2rem;\n  color: black;\n  cursor: pointer;\n  align-self: center;\n  text-align: left;\n  padding-left: 5vw;\n  flex: 1 1 0px;\n  display: flex;\n  justify-content: flex-start;\n`;\n\nconst Email = styled.div`\n  font-size: 0.9rem;\n  font-family: \"Montserrat\", sans-serif;\n  color: black;\n  text-align: right;\n  padding-right: 5vw;\n  flex: 1 1 0px;\n`;\n\nconst MyIcon = styled.img`\n  margin: 5px;\n  width: 24px;\n  height: 24px;\n`;\n\nconst MenuBar = () => {\n  const cv = \"./files/RCooper-CV.pdf\";\n  const linkedinSRC = \"./img/linkedin.png\";\n  const twitterSRC = \"./img/twitter.png\";\n  const googleSRC = \"./img/googlescholar.png\";\n\n  const linkedinLink = \"https://www.linkedin.com/in/rose-cooper-b46b8957/\";\n  const twitterLink = \"https://twitter.com/RoseA_Cooper\";\n  const googleLink =\n    \"https://scholar.google.co.uk/citations?hl=en&user=oJhb_0YAAAAJ&imq=Rose+Cooper&view_op=list_works\";\n\n  return (\n    <Background>\n      <Buttons>\n        <a href={linkedinLink} target=\"_blank\" rel=\"noopener noreferrer\">\n          <MyIcon src={linkedinSRC} alt=\"\" />\n        </a>\n\n        <a href={twitterLink} target=\"_blank\" rel=\"noopener noreferrer\">\n          <MyIcon src={twitterSRC} alt=\"\" />\n        </a>\n\n        <a href={googleLink} target=\"_blank\" rel=\"noopener noreferrer\">\n          <MyIcon src={googleSRC} alt=\"\" />\n        </a>\n      </Buttons>\n      <LinkContainer>\n        <Text onClick={animateScroll.scrollToTop}>Home</Text>\n        <Link to=\"research\" smooth={true} duration={1000}>\n          <Text>Research</Text>\n        </Link>\n        <Link to=\"publications\" smooth={true} duration={1000}>\n          <Text>Papers</Text>\n        </Link>\n        <Text>\n          <a\n            href={cv}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            style={{ textDecoration: \"none\", color: \"inherit\" }}\n          >\n            CV\n          </a>\n        </Text>\n      </LinkContainer>\n      <Email>rose.cooper@bc.edu</Email>\n    </Background>\n  );\n};\n\nexport default MenuBar;\n","import React from \"react\";\nimport styled from \"@emotion/styled/macro\";\n\nconst Photo = styled.img`\n  border-radius: 50%;\n  object-fit: cover;\n  position: absolute;\n  left: 20%;\n  top: 20%;\n  width: 60%;\n  height: 60%;\n`;\n\nconst Container = styled.div`\n  position: relative;\n  width: 60%;\n  flex: 0 0 40%;\n  display: block;\n\n  &:after {\n    content: \"\";\n    display: block;\n    padding-bottom: 100%;\n  }\n`;\n\nconst AMPhoto = () => {\n  var imageSource = `./img/face.jpg`;\n  return (\n    <Container>\n      <Photo src={imageSource} alt=\"\" />\n    </Container>\n  );\n};\n\nexport default AMPhoto;\n","import React from \"react\";\nimport styled from \"@emotion/styled/macro\";\n\n//import data from \"./data.json\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-around;\n  flex: 0 0 45%;\n`;\n\nconst Text = styled.div`\n  font-size: 1.2rem;\n  color: black;\n  word-wrap: normal;\n  display: block;\n  white-space: pre-line;\n  line-height: 1.5;\n  text-align: left;\n  padding-right: 7rem;\n  font-weight: 600;\n`;\n\nconst Text2 = styled.div`\n  font-size: 1.2rem;\n  color: black;\n  word-wrap: normal;\n  display: block;\n  white-space: pre-line;\n  line-height: 1.5;\n  text-align: left;\n  margin-top: 2rem;\n  font-style: italic;\n  padding-right: 7rem;\n`;\n\nconst AMText = () => {\n  var text = `2017 - present\n  Postdoctoral Scholar, Memory Modulation Lab\nDepartment of Psychology & Neuroscience\nBoston College\n\n2013-2017\nPhD Psychology, University of Cambridge`;\n\n  var text2 = `I am a cognitive neuroscientist interested in how we perceive and remember specific events, and how brain networks support the multidimensional quality of our memories`;\n\n  // ? to do to save data in mongodb??\n  //var string = data[0].aboutme.text;\n  //console.log(data[0].aboutme.text);\n  return (\n    <Container>\n      <Text>{text}</Text>\n      <Text2>{text2}</Text2>\n    </Container>\n  );\n};\n\nexport default AMText;\n","import React from \"react\";\nimport styled from \"@emotion/styled/macro\";\nimport AMPhoto from \"./AMPhoto\";\nimport AMText from \"./AMText\";\n\nconst Background = styled.div`\n  width: 100vw;\n  background: white;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: transparent;\n  margin-top: -5vh;\n  margin-bottom: -5vh;\n`;\n\nconst AMBackground = () => {\n  return (\n    <Background>\n      <AMPhoto />\n      <AMText />\n    </Background>\n  );\n};\n\nexport default AMBackground;\n","import React from \"react\";\nimport styled from \"@emotion/styled/macro\";\n\nconst Photo = styled.img`\n  width: 50vh;\n  height: 35vh;\n  margin-right: 5vw;\n  object-fit: contain;\n  position: relative;\n`;\n\nconst ResBrainPhoto = ({ source }) => {\n  var imageSource = source;\n  return <Photo src={imageSource} alt=\"\" />;\n};\n\nexport default ResBrainPhoto;\n","import React from \"react\";\nimport styled from \"@emotion/styled/macro\";\n\nconst Text = styled.div`\n  font-size: 1rem;\n  color: black;\n  word-wrap: normal;\n  display: block;\n  white-space: pre-line;\n  line-height: 1.5;\n  text-align: justify;\n  text-justify: inter-word;\n`;\n\nconst ResText = ({ text }) => {\n  return <Text>{text}</Text>;\n};\n\nexport default ResText;\n","import React from \"react\";\nimport styled from \"@emotion/styled/macro\";\nimport ResBrainPhoto from \"./ResBrainPhoto\";\nimport ResText from \"./ResText\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n  width: 100%;\n  margin-top: 10vh;\n`;\n\nconst ResBrain = () => {\n  var textString = `Remembering the past engages a large scale network of brain regions, often referred to as the default network. Using functional magnetic resonance imaging (fMRI), my work tests how information flows through this network and how its activity and connections support our ability to perceive and recall unique events. For example, we have shown that connections to and within a posterior medial subsystem support the amount of detail we recall about an event, with distinct connections supporting memory for objects and locations within the same event. I am particularly interested in how the pattern of functional connections with the default network explains memory “fingerprints” and differences in the way memories are experienced over time and between different people. `;\n\n  const imageSource = \"./img/brain.png\";\n\n  return (\n    <Container>\n      <ResBrainPhoto source={imageSource} />\n      <ResText text={textString} />\n    </Container>\n  );\n};\n\nexport default ResBrain;\n","import React from \"react\";\nimport styled from \"@emotion/styled/macro\";\n\nconst Photo = styled.img`\n  width: 50vh;\n  height: 35vh;\n  object-fit: contain;\n  position: relative;\n  margin-left: 5vw;\n`;\n\nconst ResPhoto = ({ source }) => {\n  var imageSource = source;\n  return <Photo src={imageSource} alt=\"\" />;\n};\n\nexport default ResPhoto;\n","import React from \"react\";\nimport styled from \"@emotion/styled/macro\";\nimport ResPhoto from \"./ResPhoto\";\nimport ResText from \"./ResText\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n  width: 100%;\n`;\n\nconst ResBehaviour = () => {\n  var textString = `When we remember a past event, such as dinner with friends or a hike through a national park, we mentally piece together the diverse aspects of our original experience — the sights, sounds, conversations, thoughts and feelings attached to that moment. Memory is more like a jigsaw puzzle than a video player: remembering one detail helps us to fit the others in place. But, the kinds of content we recall and the accuracy with which we do so varies drastically over time, between different experiences, and from one person to another. My prior research explored how the quality and structure of memories differs in autism, and my current research tests how we ‘reconstruct’ details of our memories, and how those details influence our subjective experience of the past.`;\n\n  const imageSource = \"./img/behaviour.jpg\";\n\n  return (\n    <Container>\n      <ResText text={textString} />\n      <ResPhoto source={imageSource} />\n    </Container>\n  );\n};\n\nexport default ResBehaviour;\n","import React from \"react\";\nimport styled from \"@emotion/styled/macro\";\nimport ResBrain from \"./ResBrain\";\nimport ResBehaviour from \"./ResBehaviour\";\n\nconst Container = styled.div`\n  width: 70vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst ResColumns = () => {\n  return (\n    <Container>\n      <ResBehaviour />\n      <ResBrain />\n    </Container>\n  );\n};\n\nexport default ResColumns;\n","import React from \"react\";\nimport styled from \"@emotion/styled/macro\";\nimport ResColumns from \"./ResColumns\";\n\nconst Background = styled.div`\n  width: 100vw;\n  background: white;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n  padding-top: 10vh;\n  margin-bottom: 10vh;\n`;\n\nconst ResBackground = () => {\n  return (\n    <div id=\"research\">\n      <Background>\n        <ResColumns />\n      </Background>\n    </div>\n  );\n};\n\nexport default ResBackground;\n","import React, { useState } from \"react\";\nimport styled from \"@emotion/styled/macro\";\nimport \"./transition.css\";\nimport { Collapse } from \"react-collapse\";\n\nconst PaperContainer = styled.div`\n  margin: 0;\n  position: relative;\n  width: 80%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  line-height: 1.5;\n`;\n\nconst PaperTitle = styled.div`\n  font-size: 0.95rem;\n  text-align: left;\n  width: 100%;\n  font-weight: bold;\n  cursor: pointer;\n`;\n\nconst PaperText = styled.div`\n  font-size: 0.95rem;\n  text-align: left;\n  width: 100%;\n  font-weight: 300;\n  align-self: flex-start;\n  cursor: pointer;\n`;\n\nconst PaperAbstract = styled.h4`\n  font-size: 0.9rem;\n  font-weight: 300;\n`;\n\nconst AbstractContainer = styled.div`\n  width: 50vw;\n  padding: 2vh;\n  position: relative;\n  display: flex;\n  justify-content: space-evenly;\n  align-items: flex-start;\n  background-color: white;\n  overflow: hidden;\n  text-align: justify;\n  text-justify: inter-word;\n  line-height: 1.5;\n  cursor: pointer;\n`;\n\nconst ExpandArrow = styled.img`\n  position: absolute;\n  width: 22px;\n  height: 22px;\n  right: 0px;\n  top: 0px;\n  z-index: 1;\n  cursor: pointer;\n`;\n\nconst LinkButton = styled.img`\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  right: 24px;\n  top: 1px;\n  z-index: 1;\n`;\n\nconst GitButton = styled.img`\n  position: absolute;\n  width: 20px;\n  height: 20px;\n  top: 1px;\n  right: -24px;\n  z-index: 1;\n`;\n\nconst OSF = styled.i`\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  top: -5px;\n  right: -24px;\n  font-size: 1.3rem;\n  z-index: 1;\n`;\n\nconst YearDiv = styled.div`\n  width: 10%;\n  font-size: 1.5rem;\n  border-right: 3px solid black;\n  margin-right: 1rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst MainContainer = styled.div`\n  width: 70vw;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  flex-direction: row;\n  min-height: 15vh;\n  margin-bottom: 10px;\n`;\n\nconst PubCard = ({ data }) => {\n  const [isOpen, setOpen] = useState(false);\n\n  const linkSRC = \"./img/link.png\";\n  const expandSRC = \"./img/expand.png\";\n  const githubSRC = \"./img/github.png\";\n\n  const collapseFunction = () => {\n    if (!isOpen) {\n      //animateScroll.scrollMore(200);\n    }\n    setOpen(!isOpen);\n  };\n\n  const color1 = \"#448AFF\";\n  const color2 = \"#00BFA5\";\n  const color3 = \"#f80759\";\n\n  const getColor = () => {\n    switch (data.year) {\n      case \"2015\":\n      case \"2019\":\n        return color1;\n      case \"2020\":\n      case \"2016\":\n        return color2;\n      case \"2017\":\n        return color3;\n      default:\n        selectedColor = \"black\";\n    }\n  };\n\n  var selectedColor = getColor();\n\n  const newStyle = {\n    borderColor: selectedColor,\n  };\n\n  return (\n    <MainContainer>\n      <YearDiv style={newStyle}>{data.year}</YearDiv>\n\n      <PaperContainer>\n        <ExpandArrow\n          onClick={() => collapseFunction()}\n          src={expandSRC}\n          alt=\"\"\n        />\n        <a href={data.link} target=\"_blank\" rel=\"noopener noreferrer\">\n          <LinkButton\n            src={linkSRC}\n            alt=\"\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          />\n        </a>\n        {data.hasOSF != null ? (\n          <OSF>\n            <a\n              href={data.hasOSF}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              style={{ textDecoration: \"none\", color: \"inherit\" }}\n            >\n              <i className=\"ai ai-osf\"></i>\n            </a>\n          </OSF>\n        ) : null}\n        {data.github != null ? (\n          <a\n            href={data.github}\n            alt=\"\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <GitButton src={githubSRC} alt=\"\" />\n          </a>\n        ) : null}\n\n        <PaperText onClick={() => collapseFunction()}>{data.authors}</PaperText>\n        <PaperText onClick={() => collapseFunction()}>{data.journal}</PaperText>\n        <PaperTitle onClick={() => collapseFunction()}>{data.title}</PaperTitle>\n        <Collapse isOpened={isOpen}>\n          <AbstractContainer onClick={() => collapseFunction()}>\n            <PaperAbstract>{data.abstract}</PaperAbstract>\n          </AbstractContainer>\n        </Collapse>\n      </PaperContainer>\n    </MainContainer>\n  );\n};\n\nexport default PubCard;\n\n// structure of json file.\n//  {\n//      \"title\" : \"\",\n//      \"authors\" : \"\",\n//      \"journal\" : \"\",\n//      \"year\": \"\",\n//      \"abstract\" : \"\",\n//      \"link\": \"\",\n//      \"hasOSF\": bool,\n//  },\n\n/*\n      <>\n        {isOpen ? (\n          <CSSTransition in={is} timeout={10} classNames=\"grow\" unmountOnExit>\n            <AbstractContainer>\n              <PaperAbstract>{data.abstract}</PaperAbstract>\n            </AbstractContainer>\n          </CSSTransition>\n        ) : null}\n      </>;\n      */\n","import React from \"react\";\nimport styled from \"@emotion/styled/macro\";\nimport PubCard from \"./PubCard\";\n\nimport data from \"./Papers.json\";\n\nconst Background = styled.div`\n  padding-top: 10vh;\n  width: 100vw;\n  background: white;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  line-height: 1;\n`;\n\nconst PubBackground = () => {\n  const items = data.map((i) => <PubCard key={i.title} data={i} />);\n\n  return (\n    <div id=\"publications\">\n      <Background>{items}</Background>\n    </div>\n  );\n};\n\nexport default PubBackground;\n\n/*\n{data.map((i) => (\n          <PubCard key={i.title} data={i} />\n        ))}\n*/\n","import React from \"react\";\nimport styled from \"@emotion/styled/macro\";\n\nconst Container = styled.div`\n  height: 5vh;\n  width: 100vw;\n  background-color: #313131;\n  display: block;\n  margin-top: 10vh;\n`;\n\nconst Text = styled.div`\n  line-height: 2.5;\n  text-align: center;\n  font-size: 0.8rem;\n  color: white;\n`;\n\nconst Footer = () => {\n  return (\n    <Container>\n      <Text>&copy; Rose Cooper 2020</Text>\n    </Container>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport TopPicture from \"./Components/TopPicture\";\nimport MenuBar from \"./Components/MenuBar/MenuBar\";\nimport AMBackground from \"./Components/AboutMe/AMBackground\";\nimport ResBackground from \"./Components/Research/ResBackground\";\nimport PubBackground from \"./Components/Publications/PubBackground\";\nimport Footer from \"./Components/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TopPicture />\n      <MenuBar />\n      <AMBackground />\n      <ResBackground />\n      <PubBackground />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}